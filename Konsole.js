(ns => {});
var h = eval("(async function (t) {await new Promise(e => setTimeout(() => e(), t));});");
var D = eval("(function () {return I.default.createElement(\"style\", null, `.konsole-terminal {\n  display: grid;\n  grid-template-rows: auto 30px;\n\n  width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n}\n\n.konsole-terminal-content {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  margin: 0;\n  padding: 0;\n}\n\n.konsole-input {\n  width: 100%;\n\n  background-color: var(--backgroundprimary);\n  color: var(--primarylight);\n\n  border: none;\n  outline: 0px;\n}\n\n.konsole-suggestion-tooltip {\n  position: absolute;\n  background: var(--backgroundprimary);\n  padding: 0.5em;\n  border: 1px solid var(--welllight);\n  top: 0;\n  transform: translateY(calc(-100% - 5px));\n}\n\n.konsole-input-wrapper {\n  position: relative;\n\n  display: flex;\n  align-items: center;\n\n  border-bottom: 1px solid var(--primarylight);\n  margin-bottom: 0.5em;\n}`);});");
var P = eval("(function (t) {let e = t;for (; !e.parentElement.classList.contains(\"react-resizable\"); ) e = e.parentElement;return e;});");
var x = eval("(function (t, e) {let n = new MutationObserver(function (o) {o.forEach(function (r) {r.type === \"childList\" && r.removedNodes.forEach(c => {R(c, t) && (e(), n.disconnect());});});});return (n.observe(document.body, {childList: !0,subtree: !0}), {cleanup: () => n.disconnect()});});");
var T = eval("(function (t, e) {let n = new MutationObserver(function (o) {o.forEach(function (r) {let c = [...r.addedNodes].reduce((s, a) => {if (a.nodeType != a.ELEMENT_NODE) return s;let m = a.matches(t) ? a : a.querySelector(t);return s ?? m;}, null);c && (e(c), n.disconnect());});});return (n.observe(document.body, {childList: !0,subtree: !0}), {cleanup: () => n.disconnect()});});");
var R = eval("(function (t, e) {return (\"children\" in t) ? [...t.children].reduce((n, o) => n || o == e || R(o, e), !1) : !1;});");
var O = eval("(function ({contexts: t, children: e}) {return t.reduce((n, {context: {Provider: o}, value: r}) => H.default.createElement(o, {value: r}, n), e);});");
var K = eval("(function () {let t = (0, i.useContext)(g), e = new y(t), n = (0, i.useContext)(C), o = (0, i.useRef)(null), [r, c] = (0, i.useState)(\"\"), [s, a] = (0, i.useState)(\"\"), [m, v] = (0, i.useState)(!e.terminalInput), [k, b] = (0, i.useState)([]);return ((0, i.useEffect)(() => {let l = async () => {(o.current.replaceChildren(...await e.getTerminalLines()), c(e.terminalInput.previousSibling.textContent));}, E = () => {let d = new MutationObserver(() => {l();});(d.observe(e.terminalElement, {childList: !0,subtree: !0,characterData: !0}), n(() => d.disconnect()));};(e.addEventListener(\"connect\", () => {(E(), l().then(() => o.current.scrollTop = o.current.scrollHeight), v(!1));}), e.addEventListener(\"disconnect\", () => {(o.current.textContent = \"Terminal is offline\", v(!0));}), E(), h(0).then(() => l()).then(() => o.current.scrollTop = o.current.scrollHeight));}, []), n(() => e.cleanup()), i.default.createElement(\"div\", {className: \"konsole-terminal\"}, i.default.createElement(D, null), i.default.createElement(\"ul\", {className: \"konsole-terminal-content\",ref: o}), i.default.createElement(\"div\", {className: \"konsole-input-wrapper\"}, k.length ? i.default.createElement(\"div\", {className: \"konsole-suggestion-tooltip\"}, i.default.createElement(\"div\", null, \"Possible autocomplete canditates:\"), i.default.createElement(\"div\", null, k.join(\" \"))) : null, i.default.createElement(\"span\", null, r), i.default.createElement(\"input\", {type: \"text\",className: \"konsole-input\",value: m ? \"[disconnected]\" : s,autoComplete: \"off\",spellCheck: \"false\",onChange: ({currentTarget: {value: l}}) => a(l),disabled: !e.terminalInput,onKeyDown: async l => {if (m) return;if ((l.key == \"Enter\" && (e.exec(s).then(() => h(100)).then(() => {o.current.scrollTop = o.current.scrollHeight;}), a(\"\")), l.key == \"Tab\")) {if (l.altKey || l.ctrlKey) return;(l.preventDefault(), e.autoComplete(s).then(d => {if (d.length == 1) {(a(d[0]), b([]));return;}(b(d), window.addEventListener(\"click\", () => b([]), {once: !0}));}));return;}[\"ArrowUp\", \"ArrowDown\"].includes(l.key) && (l.preventDefault(), await e.inputKey(l.key), a(e.terminalInput.value));}}))));});");
var W = eval("(function (t) {let e = [];return {cleanup: () => {(e.forEach(n => n()), t.tprint(\"Terminated\"), t.closeTail());},async mount(n) {return new Promise(async o => {(t.tail(), t.disableLog(\"ALL\"), t.printRaw(f.default.createElement(\"span\", {\"data-pid\": t.pid})), await t.sleep(0));let r = P(document.querySelector(`span[data-pid=\"${t.pid}\"]`)), c = () => {let a = t.ui.getTheme();return (Object.entries(a).forEach(([m, v]) => {r.style.setProperty(`--${m}`, v);}), r.style.flexDirection = \"unset\", f.default.createElement(\"div\", {style: {position: \"relative\",color: \"var(--primarylight)\",width: \"100%\",height: \"100%\",fontFamily: '\"Lucida Console\", \"Lucida Sans Unicode\", \"Fira Mono\", Consolas, \"Courier New\", Courier, monospace, \"Times New Roman\"'}}, n));}, s = [{context: g,value: t}, {context: A,value: o}, {context: C,value: a => e.push(a)}];(e.push(() => M.default.unmountComponentAtNode(r)), M.default.render(f.default.createElement(O, {contexts: s}, f.default.createElement(c, null)), r), x(r, () => o()));});}};});");
var he = eval("(async function (t) {let e = W(t);return (t.atExit(() => e.cleanup()), e.mount(q.default.createElement(K, null)));});");
var $ = eval("Object.create;");
var S = eval("Object.defineProperty;");
var j = eval("Object.getOwnPropertyDescriptor;");
var z = eval("Object.getOwnPropertyNames;");
var _ = eval("Object.getPrototypeOf;"), G = eval("Object.prototype.hasOwnProperty;");
var L = eval("((t, e) => () => (e || t((e = {exports: {}}).exports, e), e.exports));");
var J = eval("((t, e, n, o) => {if (e && typeof e == \"object\" || typeof e == \"function\") for (let r of z(e)) !G.call(t, r) && r !== n && S(t, r, {get: () => e[r],enumerable: !(o = j(e, r)) || o.enumerable});return t;});");
var u = eval("((t, e, n) => (n = t != null ? $(_(t)) : {}, J(e || !t || !t.__esModule ? S(n, \"default\", {value: t,enumerable: !0}) : n, t)));");
var p = eval("L((Y, N) => {N.exports = window.React;});");
var U = eval("L((se, F) => {F.exports = window.ReactDOM;});");
var I = eval("u(p());");
var y = eval("(class extends EventTarget {cleanupMap = {};terminalInput = null;terminalElement = null;#e = null;#t = [];constructor(e) {super();let n = () => {let {cleanup: r} = T(\"#terminal-input\", () => {(o(), this.dispatchEvent(new Event(\"connect\")));});(this.cleanupMap.deletion && this.cleanupMap.deletion(), this.cleanupMap.deletion = r);}, o = () => {for ((this.terminalInput = document.querySelector(\"#terminal-input\"), this.terminalElement = document.querySelector(\"#terminal\"), this.#e = Object.keys(this.terminalInput).find(c => c.includes(\"__reactProps\"))); this.#t.length; ) this.#t.shift()();let {cleanup: r} = x(this.terminalInput, () => {(this.terminalInput = null, n(), this.dispatchEvent(new Event(\"disconnect\")));});(this.cleanupMap.creation && this.cleanupMap.creation(), this.cleanupMap.creation = r);};(this.terminalInput = document.querySelector(\"#terminal-input\"), this.terminalInput ? o() : n());}async connect() {this.terminalInput || await new Promise(e => this.#t.push(() => e()));}async exec(e) {(await this.connect(), this.terminalInput.value = e, this.terminalInput[this.#e].onChange({target: this.terminalInput}), this.terminalInput[this.#e].onKeyDown({key: \"Enter\",preventDefault: () => null}));}async inputKey(e) {(await this.connect(), this.terminalInput[this.#e].onKeyDown({key: e,preventDefault: () => null}));}async getTerminalLines() {return (await this.connect(), [...this.terminalElement.children].map(e => e.cloneNode(!0)));}async autoComplete(e, n = !0) {await this.connect();let {cleanup: o} = T('div[role=\"tooltip\"]', s => {n && (s.style.display = \"none\");});(setTimeout(() => o(), 500), this.terminalInput.value = e, this.terminalInput[this.#e].onChange({target: this.terminalInput}), this.terminalInput[this.#e].onKeyDown({key: \"Tab\",preventDefault: () => null}), await h(0));let r = [...document.querySelectorAll('div[role=\"tooltip\"]')].find(s => s.innerHTML.includes(\"Possible autocomplete candidates:\"));return r ? r.firstElementChild.lastElementChild.textContent.split(\" \") : [this.terminalInput.value];}cleanup() {for (let e in this.cleanupMap) this.cleanupMap[e]();}});");
var i = eval("u(p());");
var H = eval("u(p());"), w = eval("u(p());"), g = eval("(0, w.createContext)(null);"), C = eval("(0, w.createContext)(null);"), A = eval("(0, w.createContext)(null);");
var f = eval("u(p());"), M = eval("u(U());");
var q = eval("u(p());");
export {he as main};
